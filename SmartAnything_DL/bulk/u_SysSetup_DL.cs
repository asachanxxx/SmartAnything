using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using smartOffice_Models;
using System.Data;

namespace SmartAnything
{
     
    public class u_SysSetup_DL
    {
        string strqry = "";

        public u_SysSetup PopulateSetupParams()
        {
            u_SysSetup objSetup = new u_SysSetup();
            return objSetup;

            
        }



        /// <summary>
        /// get details from u_SysSetup table in data base
        /// </summary>
        /// <param name="objSys">object of u_SysSetup class in smartOffice_Models </param>
        /// <returns>object of u_SysSetup class in smartOffice_Models fill with details</returns>
        public u_SysSetup getDetails()
        {
           

            try
            {
                u_SysSetup objSys = new u_SysSetup();
                strqry = @" select company from u_SysSetup";
                DataRow drSys = u_DBConnection.ReturnDataRow(strqry);

                if (drSys != null)
                {
                    objSys.strCompany = drSys["company"].ToString();
                    return objSys;
                }
                return null;
            }
            catch (Exception ex)
            {
                
                throw ex;
            }
            

            
        }

        /// <summary>
        /// get auto generate details from u_SysSetup table in data base
        /// modified by Peshala Rupasingha 2013/12/12
        /// </summary>
        /// <param name="objSys">object of u_SysSetup class in smartOffice_Models </param>
        /// <returns>object of u_SysSetup class in smartOffice_Models fill with details</returns>
        public int getAutoGenerateData(string type)
        {

            try
            {
                u_SysSetup objSys = new u_SysSetup();

                strqry = @"select isCusAutoGenerated,isSupAutoGenerated,isProAutoGenerated,isWastageAutoGenerated,isDamageAutoGenerated,isPrnAutoGenerated,isPurchaseReqAutoGenerated,"
                                        + " isPurchaseOdrAutoGenerated,isBatchNumberAutoGenerated,isGRNAutoGenerated,isTransferNoteAutoGenerated,"
                                        + " isStaffUsageAutoGenerated,isItemtoItemTransferAutoGenerated,isBillPromotAutoGenerated,isProductPromotAutoGenerated,isFreezBatchNoAutoGenarated,isAdjustNoAutoGenarated from u_SysSetup";

               
                DataRow drSys = u_DBConnection.ReturnDataRow(strqry);

                if (drSys != null)
                {
                    if (type == "cus")
                    {
                        return int.Parse(drSys["isCusAutoGenerated"].ToString());
                        
                    }

                    if (type == "sup")
                    {
                       return int.Parse(drSys["isSupAutoGenerated"].ToString());
                    }

                    if (type == "product")
                    {
                        return int.Parse(drSys["isProAutoGenerated"].ToString());
                    }

                    if (type == "wastage")
                    {
                        return int.Parse(drSys["isWastageAutoGenerated"].ToString());
 
                    }

                    if (type == "damage")
                    {
                        return int.Parse(drSys["isDamageAutoGenerated"].ToString());

                    }

                    if (type == "prn")
                    {
                        return int.Parse(drSys["isPrnAutoGenerated"].ToString());
                    }
                    if (type == "grn")
                    {
                        return int.Parse(drSys["isGRNAutoGenerated"].ToString());
                    }
                    if (type == "PurchaseReq")
                    {
                        return int.Parse(drSys["isPurchaseReqAutoGenerated"].ToString());
                    }
                    if (type == "po")
                    {
                        return int.Parse(drSys["isPurchaseOdrAutoGenerated"].ToString());
                    }
                    if (type == "batchno")
                    {
                        return int.Parse(drSys["isBatchNumberAutoGenerated"].ToString());
                    }
                    if (type == "Transfer")
                    {
                        return int.Parse(drSys["isTransferNoteAutoGenerated"].ToString());
                    }
                    if (type == "Usage")
                    {
                        return int.Parse(drSys["isStaffUsageAutoGenerated"].ToString());
                    }
                    if (type == "ItemTrans")
                    {
                        return int.Parse(drSys["isItemtoItemTransferAutoGenerated"].ToString());
                    }
                    if (type == "BillPromot")
                    {
                        return int.Parse(drSys["isBillPromotAutoGenerated"].ToString());
                    }
                    if (type == "ProductPromot")
                    {
                        return int.Parse(drSys["isProductPromotAutoGenerated"].ToString());
                    }
                    if (type == "FreezBatchNo")
                    {
                        return int.Parse(drSys["isFreezBatchNoAutoGenarated"].ToString());
                    }
                    if (type == "AdjusteNo")
                    {
                        return int.Parse(drSys["isAdjustNoAutoGenarated"].ToString());
                    }
                }
                return -1;
            }
            catch (Exception ex)
            { 
                throw ex;
            }
        }


        /// <summary>
        /// aceess the stored procedure and get values
        ///  modified by Peshala Rupasingha 2013/12/13
        /// </summary>
        /// <param name="type">master table type</param>
        /// <returns>data table fill with values</returns>
        public DataTable AcessSP(string type)
        {
            try
            {
                string strSP;
                strSP = "FillAutoNumber";
                DataTable dtSPvalues = u_DBConnection.Select(strSP, type);
                return dtSPvalues;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

       


        /// <summary>
        /// add cancel values to the cancelAutoNumber table
        ///  modified by Peshala Rupasingha 2013/12/13
        /// </summary>
        /// <param name="objCus">Object of a m_Customer class in smartOffice_Models </param>
        public void AddToCancelTable(string ID,string type)
        {
            try
            {

                strqry = @"insert into cancelAutoNumber(master, autoNo) values ('" + type + "','" + ID + "')";
                u_DBConnection.ExecuteNonQuery(strqry);

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        /// <summary>
        /// get the level id for create lat codes
        /// </summary>
        /// <returns>string value level id</returns>
        public string getLotLevel()
        {
            strqry = @"select lotCodeDependingLevel from u_SysSetup";

               
                DataRow drSys = u_DBConnection.ReturnDataRow(strqry);

                if (drSys != null)
                {
                    return (drSys["lotCodeDependingLevel"].ToString());
                }
                return null;
 
        }

        /// <summary>
        /// check GL Connect or not to the system
        /// </summary>
        /// <returns>selected integer value</returns>
        public int GetGLConnect()
        {
             u_SysSetup objSys = new u_SysSetup();

                strqry = @"select isGLConnect from u_SysSetup";


                DataRow drGL = u_DBConnection.ReturnDataRow(strqry);

                if (drGL != null)
                {
                    return (int.Parse(drGL["isGLConnect"].ToString()));
                }
                else return -1;
 
        }


        /// <summary>
        /// check Avg cost used or not to the system
        /// </summary>
        /// <returns>selected integer value</returns>
        public int getIsAverageCostBased()
        {
            u_SysSetup objSys = new u_SysSetup();

            strqry = @"select isAvgCostBased from u_SysSetup";


            DataRow drAvg = u_DBConnection.ReturnDataRow(strqry);

            if (drAvg != null)
            {
                return (int.Parse(drAvg["isAvgCostBased"].ToString()));
            }
            else return -1;

        }


       /// <summary>
       /// get Transfer acc code
       /// </summary>
       /// <returns>account code</returns>
        public string GetGoodInTransferAccCode()
        {
            u_SysSetup objSys = new u_SysSetup();

            strqry = @"select goodInTransferAccCode from u_SysSetup";


            DataRow drTrans = u_DBConnection.ReturnDataRow(strqry);

            if (drTrans != null)
            {
                return drTrans["goodInTransferAccCode"].ToString();
            }
            else return null;

        }


        /// <summary>
        /// get Additional acc code
        /// </summary>
        /// <returns>account code</returns>
        public string GetAdditionalAccCode()
        {
            u_SysSetup objSys = new u_SysSetup();

            strqry = @"select AdditionalAccCode from u_SysSetup";


            DataRow drAdd = u_DBConnection.ReturnDataRow(strqry);

            if (drAdd != null)
            {
                return drAdd["AdditionalAccCode"].ToString();
            }
            else return null;

        }


        /// <summary>
        /// get Staff Usage Account Code from u_SysSetup table
        /// </summary>
        /// <returns>account code</returns>
        public string GetStaffUsageAccCode()
        {
            u_SysSetup objSys = new u_SysSetup();

            strqry = @"select staffUsageAccCode from u_SysSetup";


            DataRow drUsage = u_DBConnection.ReturnDataRow(strqry);

            if (drUsage != null)
            {
                return drUsage["staffUsageAccCode"].ToString();
            }
            else return null;

        }

        /// <summary>
        /// check If Maintain Stock Lot
        /// </summary>
        /// <returns>selected integer value</returns>
        public int GetMaintainStockLot()
        {
            u_SysSetup objSys = new u_SysSetup();

            strqry = @"select intIsMaintainStockLot from u_SysSetup";


            DataRow drSL = u_DBConnection.ReturnDataRow(strqry);

            if (drSL != null)
            {
                return (int.Parse(drSL["intIsMaintainStockLot"].ToString()));
            }
            else return -1;

        }
    }
}
